const { createVoiceEmbed, createSuccessEmbed, createWarningEmbed } = require('../utils/embeds');

module.exports = {
    data: {
        name: 'amoov',
        description: 'Activation/d√©sactivation de la protection anti-d√©placement vocal'
    },
    async execute(message, args, bot) {
        const guildData = await bot.getGuildData(message.guild.id);
        const member = message.member;
        
        // Check if user is in voice channel for context
        const voiceChannel = member.voice.channel;
        
        try {
            // Toggle anti-move protection
            const wasActive = guildData.modules.antiMove;
            guildData.modules.antiMove = !wasActive;
            
            // Reset attempt counters when toggling
            if (guildData.modules.antiMove) {
                guildData.antiMoveAttempts = {};
            }
            
            await bot.guildData.set(message.guild.id, guildData);
            await require('../utils/database').saveConfig(message.guild.id, guildData);
            
            await bot.logAction(message.guild.id, 'antiMove', {
                type: guildData.modules.antiMove ? 'enabled' : 'disabled',
                user: message.author.tag,
                channel: voiceChannel?.name || 'Aucun salon vocal'
            });
            
            const status = guildData.modules.antiMove ? 'activ√©e' : 'd√©sactiv√©e';
            const statusEmoji = guildData.modules.antiMove ? 'üõ°Ô∏è' : 'üîì';
            const statusColor = guildData.modules.antiMove ? 'SUCCESS' : 'WARNING';
            
            const embed = createVoiceEmbed(
                `${statusEmoji} Protection Anti-Move ${status.charAt(0).toUpperCase() + status.slice(1)}`,
                `La protection contre les d√©placements vocaux est maintenant **${status}**.`
            );
            
            embed.addFields([
                {
                    name: '‚öôÔ∏è **Configuration Actuelle**',
                    value: [
                        `üö´ Statut: ${guildData.modules.antiMove ? 'üü¢ Activ√©' : 'üî¥ D√©sactiv√©'}`,
                        `üî¢ Max tentatives: ${guildData.antiMoveSettings.maxAttempts}`,
                        `‚è±Ô∏è Dur√©e sanction: ${Math.round(guildData.antiMoveSettings.punishmentDuration / 1000 / 60)} minutes`,
                        `üìã Type sanction: ${guildData.antiMoveSettings.punishmentType}`
                    ].join('\n'),
                    inline: true
                },
                {
                    name: 'üéØ **Comment √ßa fonctionne**',
                    value: guildData.modules.antiMove ? [
                        '‚Ä¢ D√©tecte les d√©placements forc√©s',
                        '‚Ä¢ Vous ram√®ne automatiquement',
                        '‚Ä¢ Compte les tentatives par utilisateur',
                        '‚Ä¢ Sanctionne apr√®s le maximum atteint'
                    ].join('\n') : [
                        '‚Ä¢ Protection d√©sactiv√©e',
                        '‚Ä¢ D√©placements vocaux autoris√©s',
                        '‚Ä¢ Aucune sanction appliqu√©e',
                        '‚Ä¢ Utilisez `=amoov` pour r√©activer'
                    ].join('\n'),
                    inline: true
                }
            ]);
            
            if (voiceChannel) {
                embed.addFields([{
                    name: 'üìç **Salon Vocal Actuel**',
                    value: `Vous √™tes dans: **${voiceChannel.name}**`,
                    inline: false
                }]);
            }
            
            if (guildData.modules.antiMove) {
                embed.addFields([{
                    name: 'üìä **Statistiques**',
                    value: [
                        `üîÑ Compteurs r√©initialis√©s`,
                        `‚ö° Protection imm√©diate`,
                        `üìù Logs activ√©s`
                    ].join('\n'),
                    inline: false
                }]);
                
                embed.addFields([{
                    name: '‚ö†Ô∏è **Attention**',
                    value: [
                        '‚Ä¢ Seuls les d√©placements **forc√©s** sont bloqu√©s',
                        '‚Ä¢ Les d√©placements volontaires restent possibles',
                        '‚Ä¢ Les mod√©rateurs malveillants seront sanctionn√©s',
                        '‚Ä¢ Vous recevrez des notifications des actions'
                    ].join('\n'),
                    inline: false
                }]);
            }
            
            embed.setFooter({ 
                text: guildData.modules.antiMove 
                    ? 'Protection anti-move active ‚Ä¢ Vous √™tes prot√©g√© contre les d√©placements forc√©s'
                    : 'Protection anti-move d√©sactiv√©e ‚Ä¢ Les d√©placements forc√©s sont autoris√©s'
            });
            
            await message.channel.send({ embeds: [embed] });
            
        } catch (error) {
            console.error('Erreur lors du toggle anti-move:', error);
            
            const embed = createWarningEmbed(
                'Erreur Anti-Move',
                'Une erreur est survenue lors de la modification de la protection anti-d√©placement.',
                [
                    { name: 'Erreur', value: error.message || 'Erreur inconnue', inline: false },
                    { name: 'Action', value: 'R√©essayez dans quelques instants', inline: false }
                ]
            );
            
            await message.channel.send({ embeds: [embed] });
        }
    }
};