const { createInfoEmbed } = require('../utils/embeds');

module.exports = {
    data: {
        name: 'all',
        description: 'Documentation compl√®te de toutes les commandes disponibles'
    },
    async execute(message, args, bot) {
        try {
            // Main commands embed
            const mainEmbed = createInfoEmbed(
                'üìö Guide Complet des Commandes',
                `**Pr√©fixe:** \`${bot.config.prefix}\`\n**Utilisateur autoris√©:** <@${bot.config.authorizedUserId}>\n\n*Toutes les commandes sont en fran√ßais et optimis√©es pour votre protection.*`,
                [
                    {
                        name: '‚öôÔ∏è **Commandes de Configuration**',
                        value: [
                            '`=setup` - Configuration interactive compl√®te',
                            '`=dashboard` - Tableau de bord en temps r√©el', 
                            '`=log [nombre] [filtre]` - Journaux d\'activit√© (1-20)',
                            '`=permissions` - V√©rification des permissions du bot',
                            '`=all` - Cette documentation compl√®te'
                        ].join('\n'),
                        inline: false
                    }
                ]
            );
            
            // Voice commands embed
            const voiceEmbed = createInfoEmbed(
                'üé§ Commandes Vocales',
                'Gestion avanc√©e des salons vocaux et protection'
            );
            
            voiceEmbed.addFields([
                {
                    name: 'üîí **Vocal Priv√© (`=pv`)**',
                    value: [
                        '`=pv` - Rendre priv√©/public le salon actuel',
                        '`=pv add @utilisateur` - Ajouter un membre autoris√©',
                        '`=pv remove @utilisateur` - Retirer un membre autoris√©',
                        '`=pv list` - Voir les membres autoris√©s'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: 'üö´ **Anti-Move (`=amoov`)**',
                    value: [
                        '`=amoov` - Activer/d√©sactiver l\'anti-d√©placement',
                        '*Ram√®ne automatiquement dans le salon d\'origine*',
                        '*Punit apr√®s 3 tentatives par timeout*'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: '‚õìÔ∏è **Syst√®me de Cha√Ænes (`=chain`)**',
                    value: [
                        '`=chain @utilisateur` - Cr√©er/supprimer une cha√Æne',
                        '*L\'utilisateur vous suit automatiquement*',
                        '*Se lib√®re automatiquement √† la d√©connexion*'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: '‚è∞ **R√©veil (`=wakeup`)**',
                    value: [
                        '`=wakeup @utilisateur` - R√©veiller par d√©placements',
                        '*D√©place rapidement √† travers tous les salons*',
                        '*Nombre de d√©placements configurable*'
                    ].join('\n'),
                    inline: false
                }
            ]);
            
            // Protection commands embed
            const protectionEmbed = createInfoEmbed(
                'üõ°Ô∏è Commandes de Protection',
                'Gestion des protections et anti-raid'
            );
            
            protectionEmbed.addFields([
                {
                    name: 'üîí **Protection des Salons**',
                    value: [
                        '`=lockname` - Verrouiller le nom du salon actuel',
                        '`=lockname #salon lock` - Verrouiller un salon sp√©cifique',
                        '`=lockname #salon unlock` - D√©verrouiller un salon'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: 'üö® **Anti-Raid**',
                    value: [
                        '`=remove @utilisateur` - Retirer toutes les permissions',
                        '`=add @utilisateur <role_id>` - Ajouter un r√¥le sp√©cifique',
                        '`=add @utilisateur <config_json>` - Restaurer une config',
                        '`=export @utilisateur` - Exporter la config des r√¥les'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: 'üìµ **Anti-Ping**',
                    value: [
                        '`=aping` - Activer/d√©sactiver l\'anti-ping',
                        '*Supprime tous les messages qui vous mentionnent*',
                        '*Logs d√©taill√©s des tentatives*'
                    ].join('\n'),
                    inline: false
                }
            ]);
            
            // Protection modules embed
            const modulesEmbed = createInfoEmbed(
                'üîß Modules de Protection Automatiques',
                'Protection passive continue sans commandes'
            );
            
            modulesEmbed.addFields([
                {
                    name: 'üõ°Ô∏è **Protection Personnelle**',
                    value: [
                        '**Anti-Mute/Deafen** - Annule mute/sourd vocal forc√©',
                        '**Anti-Timeout** - Supprime les timeouts automatiquement', 
                        '**Anti-R√¥le** - Restaure les r√¥les prot√©g√©s supprim√©s',
                        '**Anti-Kick/Ban** - Cr√©e une invitation de retour',
                        '**Anti-Rename** - Prot√®ge votre pseudonyme',
                        '**Anti-Permissions** - Prot√®ge les permissions des r√¥les'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: 'üé§ **Protection Vocale**',
                    value: [
                        '**Salons Priv√©s** - Expulsion automatique des intrus',
                        '**Anti-Move** - Retour automatique + sanction',
                        '**Syst√®me Cha√Ænes** - Suivi vocal automatique',
                        '**Wakeup System** - D√©placements multiples rapides'
                    ].join('\n'),
                    inline: false
                }
            ]);
            
            // Usage examples embed
            const examplesEmbed = createInfoEmbed(
                'üí° Exemples d\'Utilisation',
                'Cas d\'usage courants et bonnes pratiques'
            );
            
            examplesEmbed.addFields([
                {
                    name: 'üöÄ **Premi√®re Configuration**',
                    value: [
                        '1. `=permissions` - V√©rifier les permissions',
                        '2. `=setup` - Configuration interactive',
                        '3. `=dashboard` - V√©rifier le statut',
                        '4. `=log 5` - Tester les journaux'
                    ].join('\n'),
                    inline: true
                },
                {
                    name: 'üîç **Surveillance**',
                    value: [
                        '`=dashboard` - Vue d\'ensemble temps r√©el',
                        '`=log 15 protection` - Activit√© de protection',
                        '`=log 10 voice` - Activit√© vocale',
                        '`=log 20` - Toute l\'activit√© r√©cente'
                    ].join('\n'),
                    inline: true
                },
                {
                    name: 'üéØ **Gestion Vocale**',
                    value: [
                        '`=pv` puis `=pv add @ami` - Salon priv√© avec ami',
                        '`=amoov` - Activer anti-d√©placement',
                        '`=chain @assistant` - Cr√©er une cha√Æne',
                        '`=wakeup @dormeur` - R√©veiller quelqu\'un'
                    ].join('\n'),
                    inline: false
                }
            ]);
            
            // Important notes embed
            const notesEmbed = createInfoEmbed(
                '‚ö†Ô∏è Notes Importantes',
                'Informations cruciales pour une utilisation optimale'
            );
            
            notesEmbed.addFields([
                {
                    name: 'üîê **S√©curit√©**',
                    value: [
                        '‚Ä¢ Seul l\'utilisateur autoris√© peut utiliser les commandes',
                        '‚Ä¢ Messages de commande supprim√©s automatiquement',
                        '‚Ä¢ Notifications DM pour les actions importantes',
                        '‚Ä¢ Logs d√©taill√©s de toutes les actions'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: '‚öôÔ∏è **Recommandations**',
                    value: [
                        '‚Ä¢ Accordez la permission "Administrateur" au bot',
                        '‚Ä¢ Placez le r√¥le du bot au-dessus des autres',
                        '‚Ä¢ Configurez les r√¥les prot√©g√©s via `=setup`',
                        '‚Ä¢ Surveillez r√©guli√®rement avec `=dashboard`'
                    ].join('\n'),
                    inline: false
                },
                {
                    name: 'üÜò **Support**',
                    value: [
                        '‚Ä¢ `=permissions` pour diagnostiquer les probl√®mes',
                        '‚Ä¢ `=log error` pour voir les erreurs r√©centes',
                        '‚Ä¢ Configuration sauvegard√©e automatiquement',
                        '‚Ä¢ Reset possible via `=setup` ‚Üí R√©initialiser'
                    ].join('\n'),
                    inline: false
                }
            ]);
            
            // Send all embeds
            await message.channel.send({ embeds: [mainEmbed] });
            await message.channel.send({ embeds: [voiceEmbed] });
            await message.channel.send({ embeds: [protectionEmbed] });
            await message.channel.send({ embeds: [modulesEmbed] });
            await message.channel.send({ embeds: [examplesEmbed] });
            await message.channel.send({ embeds: [notesEmbed] });
            
        } catch (error) {
            console.error('Erreur lors de l\'affichage de la documentation:', error);
            await message.channel.send('‚ùå Une erreur est survenue lors de l\'affichage de la documentation.');
        }
    }
};